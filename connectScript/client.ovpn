# script-security 2
# up /etc/openvpn/update-resolv-conf
# down /etc/openvpn/update-resolv-conf
# Specify that we are a client and that we
# will be pulling certain config file directives
# from the server.
client

# Use the same setting as you are using on
# the server.
# On most systems, the VPN will not function
# unless you partially or fully disable
# the firewall for the TUN/TAP interface.
;dev tap
dev tun

# Windows needs the TAP-Win32 adapter name
# from the Network Connections panel
# if you have more than one.  On XP SP2,
# you may need to disable the firewall
# for the TAP adapter.
;dev-node MyTap

# Are we connecting to a TCP or
# UDP server?  Use the same setting as
# on the server.
;proto tcp
;proto udp

# The hostname/IP and port of the server.
# You can have multiple remote entries
# to load balance between the servers.
remote tfe.furest.be 1194 udp
remote tfe.furest.be 443 udp
remote tfe.furest.be 22 udp
remote tfe.furest.be 8080 udp
remote tfe.furest.be 1194 tcp
remote tfe.furest.be 443 tcp
remote tfe.furest.be 22 tcp
remote tfe.furest.be 8080 tcp
;remote my-server-2 1194

# Choose a random host from the remote
# list for load-balancing.  Otherwise
# try hosts in the order specified.
;remote-random

# Keep trying indefinitely to resolve the
# host name of the OpenVPN server.  Very useful
# on machines which are not permanently connected
# to the internet such as laptops.
resolv-retry infinite

# Most clients don't need to bind to
# a specific local port number.
nobind

# Downgrade privileges after initialization (non-Windows only)
user nobody
group nogroup

# Try to preserve some state across restarts.
persist-key
persist-tun

# If you are connecting through an
# HTTP proxy to reach the actual OpenVPN
# server, put the proxy server/IP and
# port number here.  See the man page
# if your proxy server requires
# authentication.
;http-proxy-retry # retry on connection failures
;http-proxy [proxy server] [proxy port #]

# Wireless networks often produce a lot
# of duplicate packets.  Set this flag
# to silence duplicate packet warnings.
;mute-replay-warnings

# SSL/TLS parms.
# See the server config file for more
# description.  It's best to use
# a separate .crt/.key file pair
# for each client.  A single ca
# file can be used for all clients.
ca ca.crt
#cert client.crt
#key client.key

# Verify server certificate by checking that the
# certicate has the correct key usage set.
# This is an important precaution to protect against
# a potential attack discussed here:
#  http://openvpn.net/howto.html#mitm
#
# To use this feature, you will need to generate
# your server certificates with the keyUsage set to
#   digitalSignature, keyEncipherment
# and the extendedKeyUsage to
#   serverAuth
# EasyRSA can do this for you.
remote-cert-tls server

# If a tls-auth key is used on the server
# then every client must also have the key.
tls-auth ta.key 1
key-direction 1
auth SHA256
# Select a cryptographic cipher.
# If the cipher option is used on the server
# then you must also specify it here.
# Note that v2.4 client/server will automatically
# negotiate AES-256-GCM in TLS mode.
# See also the ncp-cipher option in the manpage
cipher AES-256-CBC

# Enable compression on the VPN link.
# Don't enable this unless it is also
# enabled in the server config file.
#comp-lzo

# Set log file verbosity.
verb 3
log /var/log/tbOpenvpn

auth-user-pass
# Silence repeating messages
;mute 20
<ca>
-----BEGIN CERTIFICATE-----
MIIDVDCCAjygAwIBAgIULfuI87X7ZcbuDU6WecpRboTVjUYwDQYJKoZIhvcNAQEL
BQAwGTEXMBUGA1UEAwwOQ0EtWE1HLVlBTk5JQ0swHhcNMTkwMjIyMjE1NjAwWhcN
MjkwMjE5MjE1NjAwWjAZMRcwFQYDVQQDDA5DQS1YTUctWUFOTklDSzCCASIwDQYJ
KoZIhvcNAQEBBQADggEPADCCAQoCggEBANaHNTmSQOywEsmPK/SssKk5vMbaCUws
BzEM4srQ7Dc1YiBCKjCGJaX8swIiFHYY9rEfhDllpchBpUKGNnbyB1FWBBBtgNuv
/0Jk8IJn2bjQngRCmZoXDnv3eb4M8uXE9G7GFNmBVZIgldsjGQc8EG+BonPg5b58
ohCrOejC4Kf9C/13wj4tewJerQg3jjwdct6lA3gWE7bGNdQyKi1CxMdvukk8oAZf
zKVRDZ7qGcTZV1uO5RWRg25bweHYgQAZ26Zd3bD7mVxPgKE3HvWcPrvDr7+Ttrvi
kykBtzg/cCvqElN4BPjGp5cLkDmS9CjCGG3kDk5OtJ6dUdYEnBkDrdECAwEAAaOB
kzCBkDAdBgNVHQ4EFgQUsYf00X7A50yFtUhFGjzSrr775jUwVAYDVR0jBE0wS4AU
sYf00X7A50yFtUhFGjzSrr775jWhHaQbMBkxFzAVBgNVBAMMDkNBLVhNRy1ZQU5O
SUNLghQt+4jztftlxu4NTpZ5ylFuhNWNRjAMBgNVHRMEBTADAQH/MAsGA1UdDwQE
AwIBBjANBgkqhkiG9w0BAQsFAAOCAQEAvLSVlkJBhcfVZFpBR/Iya2+C9k0++GUw
qly0EVbIehSdio0RLrMDTkSwGhGNNcYN3dh0OJtgjDtL9b1JW5/Mz6SKtDSCgXIZ
RH7VmbZ//RYDcL671/Iy99XGovdMQMGedtjK/O96AD+/TMEAs/8M8HN+3cvNi98f
XtTogdVCMvSIFuPz5MNMv3U+Wn/IJutAo0QGEYWKu8Nh4eZvhfDXNXvEyZ3hJncS
ZntRbZw7eG9II4QN9LdRz53lfjyECosFDM9YS5V0BVTGY0dJ3EF8Pjkuw0JfIPvB
2rhD2oE6okCkOzx3hyJCZfCs/XujZHyqV2fa2Cxqvsb/hOUUmX869Q==
-----END CERTIFICATE-----
</ca>
<tls-auth>
#
# 2048 bit OpenVPN static key
#
-----BEGIN OpenVPN Static key V1-----
fc0b462e6c429b73c74dffdf596965df
4a28ac0aadb28a470ab8d273bc2cbc2d
1af25553ef4d233a279dd739e8d57008
9803f0588f03954a6176ea38487c231b
d345b241e7cedb348a13803135854e65
a754a639324a92b1ea68bb73adc16a46
8c6708e02a35930d9d1a75b8e6cf0d62
d963157ae41fdb011174c0d0877ab6c5
1042f682ded2df9148afb9f6bd28415f
aff1d12c0bbd29c0be92c10489fc9241
0c49dcc3e37d1200265da5fe3386a62b
15b080555d084bba56a96e94ec6beb73
c7ee1618a7c06f2aa24e1101623ae463
74cb08c771cbe24b852846a25aff28e3
df6d1cb98afe4d016e2868a2db0143ef
b6b60b8f7596f9cb2403406a75656d89
-----END OpenVPN Static key V1-----
</tls-auth>
